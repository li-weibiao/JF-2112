1.1 	MySQL的启动报错
启动MariaDB报错信息如下：
Systemctl restart mariadb.service
Job for mariadb.service failed because the control process exited with error code. See "systemctl status mariadb.service" and "journalctl -xe" for details.
解决方法：查看错误日志：journalctl –xe
查看端口是否被占用：netstat -tnlp|grep 3306
最终的判断，MYSQL进程已经存在，无法启动Mariadb，解决方法，停止原来的MYSQL服务；
MYSQL最常见的报错信息
Redirecting to /bin/systemctl restart  mariadb.service
Job for mariadb.service failed because the control process exited with error code. See "systemctl status mariadb.service" and "journalctl -xe" for details.
ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)
解决方法：
	使用journalctl –xe查看MYSQL错误信息；
	关闭服务器selinux安全策略，关闭防火墙setenforce 0；
	检查MYSQL|Mariadb通过什么样的方式部署的；
	  检查其配置文件/etc/my.cnf，datadir数据目录是否配置；检查socket是否配置正确
	确认数据库的数据目录mysql用户是否拥有读写权限；
	检查数据库目录是否初始化，是否包括mysql、test基础库；
	检查socket文件所在的路径，是否存在socket文件，权限是否正确；
 
 
（1）基础笔试命令考察
1.开启MySQL服务
/etc/init.d/mysqld start 
service mysqld start 
systemctl start mysqld
2.检测端口是否运行
lsof -i :3306 
netstat -lntup |grep 3306
ss -antp|grep 3306
3.为MySQL设置密码或者修改密码
设置密码
mysql -uroot -ppassword -e "set passowrd for root = passowrd('passowrd')"  5.7
mysql -uroot -ppassword -e "set passowrd  root = passowrd('passowrd')"  5.5
mysqladmin -uroot password "NEWPASSWORD"
更改密码
mysqladmin -uroot passowrd oldpassowrd "NEWPASSWORD"
use mysql;
update user set passowrd = PASSWORD('newpassword') where user = 'root';flush privileges;
msyql 5.7以上版本修改默认密码命令
alter user 'root'@'localhost' identified by 'root' 
4.登陆MySQL数据库
mysql -uroot -ppasswor
5.查看当前数据库的字符集
show create database DB_NAME;
6.查看当前数据库版本
mysql -V 
mysql -uroot -ppassowrd -e "use mysql;select version();"
7.查看当前登录的用户
select user();
8.创建GBK字符集的数据库jingfeng，并查看已建库完整语句
create database jingfeng DEFAULT CHARSET GBK COLLATE gbk_chinese_ci;
9.创建用户jingfeng，使之可以管理数据库jingfeng
grant all on jingfeng.* to 'jingfeng'@'localhost' identified by 'jingfeng';
10.查看创建的用户jingfeng拥有哪些权限
show grants for jingfeng@localhost
11.查看当前数据库里有哪些用户
select user from mysql.user;
12.进入jingfeng数据库
use jingfeng
13.创建一innodb GBK表test，字段id int(4)和name varchar(16)
create table test ( id int(4), name varchar(16) )ENGINE=innodb DEFAULT CHARSET=gbk;
14.查看建表结构及表结构的SQL语句
desc test;
show create table test\G
15.插入一条数据“1,jingfeng”
insert into test values('1','jingfeng');
16.再批量插入2行数据 “2,京峰”，“3,jingfengedu”
insert into test values('2','京峰'),('3','jingfengedu');
17.查询名字为jingfeng的记录
select * from test where name = 'jingfeng';
18.把数据id等于1的名字jingfeng更改为mgg
update test set name = 'mgg' where id = '1';
19.在字段name前插入age字段，类型tinyint(2)
alter table test add age tinyint(2) after id;
将job字段删除
alter table jf1 drop column job;
20.不退出数据库,完成备份jingfeng数据库
system mysqldump -uroot -pMgg123.0. -B jingfeng >/root/jingfeng_bak.sql
21.删除test表中的所有数据，并查看
delete from test; 
select * from test;
22.删除表test和jingfeng数据库并查看
drop table test; 
show tables; 
drop database jingfeng; 
show databases;
23.不退出数据库恢复以上删除的数据
system mysql -uroot -pMgg123.0. </root/jingfeng_bak.sql
24.把库表的GBK字符集修改为UTF8
alter database jingfeng default character set utf8; 
alter table test default character set utf8;
25.把id列设置为主键，在Name字段上创建普通索引
alter table test add primary key(id);
create index mggindex on test(name(16));
26.在字段name后插入手机号字段(shouji)，类型char(11)
alter table test add shouji char(11); 
#默认就是在最后一列后面插入新增列
27.所有字段上插入2条记录（自行设定数据）
insert into test values('4','23','li','13700000001'),('5','26','zhao','13710000001');
28.在手机字段上对前8个字符创建普通索引
create index SJ on test(shouji(8));
29.查看创建的索引及索引类型等信息
show index from test; 
show create table test\G 
#下面的命令也可以查看索引类型 
show keys from test\G  
30.删除Name，shouji列的索引
drop index SJ on test; 
drop index mggindex on test;
31.对Name列的前6个字符以及手机列的前8个字符组建联合索引
create index lianhe on test(name(6),shouji(8));
32.查询手机号以137开头的，名字为zhao的记录（提前插入）
select * from test where shouji like '137%' and name = 'zhao';
33.查询上述语句的执行计划（是否使用联合索引等）
explain select * from test where name = 'zhao' and shouji like '137%'\G
34.把test表的引擎改成MyISAM
alter table test engine=MyISAM;
35.收回jingfeng用户的select权限
revoke select on jingfeng.* from jingfeng@localhost;
36.删除jingfeng用户
drop user migongge@localhost;
37.删除jingfeng数据库
drop database jingfeng;
38.使用mysqladmin关闭数据库
mysqladmin -uroot -pMgg123.0. shutdown 
lsof -i :3306
39.MySQL密码丢了，请找回？
mysqld_safe --skip-grant-tables & #启动数据库服务 
mysql -uroot -ppassowrd -e "use mysql;update user set passowrd = PASSWORD('newpassword') where user = 'root';flush privileges;"
(2)mysql运维基础知识面试问答题
面试题001：请解释关系型数据库的概念及主要特点？
    关系型数据库模型就是把复杂的数据结构归简单的二元关系，对数据的操作的都是建立一个或多个关系表格上，最大特点就是二维表格，通过sql语言查询语句存取数据，保持数据一致性方面很强大。
面试题002：请说出关系型数据库的典型产品、特点及场景应用？
    1.mysql互联网企业常用
    2.oracle 大型传统企业应用软件
    3.如数据备份、复杂连接查询、一致性数据存储等，还是使用mysql或者其他传统的关系型数据库最合适。
面试题003：请解释非关系数据库概念及主要特点？
<预格式化的文字>    非关系型数据库也被称为NoSQL数据库，数据存储不需要特有固定的表结构。
    特点是：高性能、高并发、简单易安装
面试题004：请说出非关系型数据库的典型产品、特点及应用场景？
    1.memcaced 纯内存
    2.redis 持久化缓存
    3.mongodb 面向文档
    如果需要短时间响应的查询操作，没有良好模式定义的数据存储，或者模式更改频繁的数据存储还是用NoSQL
面试题005：请详细描述SQL语句及对应代表性关键字。
    sql语句分类如下：
    DDL数据定义语言，用来定义数据库对象：库、表、列。
    代表性关键字：create alter drop 
    DML数据操作语言，用来定义数据库记录
    代表性关键字：insert delete update
    DCL数据控制语言，用来定义访问权限和安全级别
    代表性关键字：grant deny    revoke
    DQL数据库查询语言，用来查询记录数据
    代表性关键字：select
面试题006：请详细描述char（4）和varchar（4）？
    char长度是固定不可变的，varchar长度是可变的（在设定内）比如同样写入cn字符，char类型对应的长度是4（cn+两个空格），但是varchar类型对应长度是2。
面试题007：如何创建一个urf8字符集的数据库jingfneg？
  create database jingfeng default character utf8 collate urf8_general_ci;
面试题008：如何授权jingfeng用户从172.16.1.0/24 访问数据库。
create  all on *.* to  jingfeng@'10.0.0.3' identified by "123456";
面试题009：什么是MySQL多实例，如何配置MySQL多实例？
    MySQL多实例就是在同一台服务器上启动多个MySQL服务，他们监听多个不同的端口，运行多个服务进程，他们互相独立，互不影响对外提供服务，便于节约服务器资源和后期架构扩展
    多实例的配置方法有两种：
    1.一个实例一个配置文件，不同端口
    2.同一个配置文件（my.cnf）下配置不同实例，基于mysqld_multi工具。
面试题010：如何加强MySQL安全，请给出可行的具体措施？
    1.删除数据库不同的默认用户
    2.配置相应的权限（包括远程连接）
    3.不可在命令行界面下收入数据库的密码
    4.定期修改密码和加强密码的复杂度。
面试题011：MySQL root密码忘了怎么找回？
    添加skip-grant-tables参数到/etc/my.cnf主配置文件中，在[ msyqld]选项中添加。
    添加完成之后mysql登录默认跳过mysql登录密码，可以使用命令进行修改。
   
update mysql.user set password = PASSWORD（'123456'）where user = 'root' ; flush privileges;
mysqladmin -uroot passowrd "NEWPASSWORD"
以上两条命令均可修改密码
将密码修改完成之后必须把/etc/my.cnf文件中的配置skip-grant-tables参数去掉或者注释。
面试题012：delete和truncate删除数据的区别?
    前者删除数据可以恢复，他是逐条删除速度慢
    后者是物理删除，不可恢复，他是整体删除速度快
面试题013：MySQL sleep线程过多如何解决？
    1.可以杀掉sleep进程，kill PID
    2.修改配置，重启服务
    [mysqld]
    wait_timeout = 600
    interactive_timeout = 30
    #如果生产服务器不可随便重启可以使用下面的方法进行解决
    set global wait_timeout = 600
    set global interactive_timeout = 30;
面试题014:sort_buffer_size参数作用？如何在线修改生效？
    在每个connection（session）第一个连接时需要使用到，来提访问性能。
    set global sort_buffer_size = 2M
  面试题015：如何在线正确清理MySQL binlog？
    MySQL中的binlog日志记录了，数据中的数据变动，便于对数据的基于时间点和基于位置的恢复，但日志文件的大小会越来也大，占用大量的磁盘空间，因此需要定时清理一部分日志信息手工删除。
    #首先查看主从库正在使用的binlog文件名称
    show master（slave）status\G
   # 删除之前一定要备份
    purge master logs before‘2017-09-01 00:00:00’；
    #删除指定时间前的日志
    pugre master logs    to 'mysql-bin.000001'
    #删除指定的日志文件
    自动删除
    通过设置binlog日志的过期时间让系统自动删除日志，
    show variables like ‘expire_logs_days’;
    et global expire_logs_days = 30;
    #查看过期时间和设置过期日期
   面试题016：Binlog工作模式有哪些？各有什么特点，企业如何选择？
    1.Row（行模式）；
    日志中会记录成每一行数据被修改的形式，然后再slave端再对相同的数据进行修改。
    2.Statement（语句模式）；
    每一条修改的数据都会完整记录到主库master的binlog日志里面，在slave上完整执行在master执行上的语句
    3.mixed（混合模式）
    结合前面的两种模式，如果在工作中有使用函数获知触发器等特殊功能需求的使用，使用混合模式数据量达到比较高时候，他就会选择statement模式，而不会选择row Level 模式
面试题017：误操作了一个drop库sql语句，如何完整恢复？
    1.停止主从复制，在主库上执行锁表并刷新binlog操作，接着恢复之前的全备文件（比如0点的全备）
    2.将0点的binlog文件与全备的到故障期间的binlog文件合并成并导出sql语句。
    mysqlbinog --no-defaults mysql-bin.000011 mysql-bin.000012 > bin.sql
    3.将导出sql语句中drop语句删除，恢复到数据库中
    mysql -uroot -p123456 < bin.sql
面试题018：mysqldump备份使用了-A  -B 参数，如何实现恢复单表
    -A 此参数作用是备份所有数据库，（相当于 --all-database）
    -B databasename 备份指定数据（单库备份使用）
面试题019：详述MySQL主从复制原理及配置主从的完整步骤
    主从复制的原理如下
    主库开启binlog功能并授权从库连接主库，从库通过change master得到主库的相关同步信息，然后连接主库进行验证，主库I/O线程根据从库slave 线程的请求，从master.info开始记录点的位置向下开始取信息，同时把取到的位置点和最新的位置与binlog信息一同发个从库I/O线程，从库将相关的sql语句存放在relay-log里面，最终从库的sql线程将relay-log里的sql语句应用到从库上，至此整个同步过程完成，之后将是无限重复上述过程。
1、主库开启binlog功能，并进行全备，将全备文件推送到从库服务器上
2、show master status\G 记录下当前的位置信息及二进制文件名
3、登陆从库恢复全备文件
4、执行change master to 语句
5、执行start slave and show slave status\G
面试题020：如何开启从库的binlog功能？

修改配置文件加上下面的配置
    log_bin=slave-bin
    log_bin_index=slave-bin.index
需要重启服务生效
面试题021：Mysql如何实现双向互为主从复制，并说明应用场景？
    双主同步主要应用于解决单一主库写的压力，具体配置如下
    主库配置
    [ mysqld]
    auto_increment_increment = 2#起始ID
    auto)increment_offset = 1 #id 自增间隔
    log-slave-update    
    从库配置
    [mysqld]
    auto_increment_increment = 2
    auto_increment_offset = 2 
    log-slave-update
面试题022:,MySQL如何实现级联同步，并说明应用常见
    级联同步主要应用在从库需要做为其他数据库的从库
    在需要做级联同步的数据库配置文件增加下面的配置即可
    log_bin=slave-bin
    log_bin_index=slave-bin.index
面试题023：MySQL主从复制故障如何解决？
    登录从库
    1.执行stop slave 停止主从同步
    2.然后set global sql_slave_skip_counter = 1跳过这一步错误
    3.最后执行start start，并查看主从同步状态
    登录主库
    1.进行全备数据库并刷新binlog，查看主库此的状态
    2.恢复全备文件到从库，然后执行change master
    3.开启主从同步start slave 并查看从同步状态
面试题024：如何监控主从复制是否故障？
    mysql -uroot -p123456 -e “show slave status\G” |grep -E “Slave_IO_Running”|awk '{print $2}'|grep -c Yes
通过判断yes个数来监控主从复制状态，正常情况等于2.
面试题025：MySQL数据库如何实现读写分离
    1.通过开发程序实现
    2.通过其他工具实现：如（mysql-mmm，mysql-proxy，mycat）
面试题026：生产一主多从从库宕机，如何手工恢复？
    1.执行stop slave 或者停止服务。
    2.修复好从数据库
    3.然后重新操作主库同步：change master or。
    面试题027：生产一主多从主库宕机，如何手工恢复？
1.登录各个从库停止同步，并查看看谁的数据最新，将它设置为新主库然其他从库同步其数据，
2.修复好主库之后生成新操作主从同步的步骤就可以了
    #需要注意的新的主库之前是只读，需要关闭此功能让其可写。
    #需要在新从库创建与之前主库相同的同步的用户与权限
    #其他从库执行change master to master_port=新主库的端口，start slave。
面试题028：工作中遇到过哪些数据库故障，请描述2个例子？
    1.开发使用root用户在从库写入数据导致主从数据不一致，并且前端没有展示需要修改的内容（仍然是老数据）。
    2.内网测试环境服务器突然断电导致主从同步故障。
面试题029：Mysql出现复制延迟有哪些原因？如何解决？
    1.需要同步的从库数据太多
    2.从库的硬件资料较差，需要提升
    3.网络问题，需要提升网络带宽
    4.主库的数据写入量较大，需要优配置和硬件资源
    5.sql语句执行过长导致，需要优化。
面试题030：给出企业生产大型mysql集群架构可行备份方案？
1.双主多从，主从同步的架构，然后实行某个从库作为备份服务器
2.编写脚本实行分库分表进行备份，并加入定时任务
3.最终将备份服务推送至内网专业服务器，数据库服务器本地保留一周
4.备份服务器根据实际情况来保留备份数据（一般30天）
面试题031：什么是数据库事务，事务有哪些特性，企业如何选择
    数据库事务是指逻辑上的一组sql语句，组成这个操作的各个语句，执行时要么成功，要么失败
    特点：具有原子性、隔离性、持久性、一致性、
面试题032：请解释全备、增备、冷备、热备概念及企业实践经验？
    全备：数据库所有数据的一次完整备份，也就是备份当前数据库的所有数据
    增备：就在上次备份的基础上到现在所有的新增的数据
    冷备：停止服务的基础上进行备份操作。
    热备：实行在线进行备份操作，不影响数据库的正常运行。
    全部在企业中基本上是每周或每天一次，其他时间是进行增量备份
    热备使用情况是两天数据库在同时提供服务的情况，针对归档模式的数据库
    冷备使用情况又企业初期，数据量不且服务器数量不多，可能会执行某些库、表结构等重大操作。
面试题033：MySQL的sql语句如何优化？
    建立主键和增加索引
面试题034：企业生产的mysql集群架构如何设计备份方案？
    1.集群架构可采用双主多从的模式，但实际双主只有一主在线提供服务，双台主之间做互备
    2.另外的从可做读的负载均衡，然后将其他一台抽出专业做备份。
面试题035：开发有一堆数据发个dba执行，dba执行需要注意什么？
    1.需要注意语句是否有格式上的错误，执行会出错导致执行过程中断。
    2.还需要注意语句的执行时间是否过长，是否会对服务器负载产生压力影响实际生产。
面试题036：如何调整生产线中MySQL数据库的字符集。
    1.首先导出库的表结构 -d 指导出表结构，然后批量替换
    2.导出库中的所有数据（在不产生新数据的前提下）
    3.然后全局替换set names = xxxx
    4.删除原有库和表，并新创建出来，再导入建库和建表语句与所有的数据
面试题037：请描述MySQL里中文数据乱码原理，如何防止乱码？
    服务器系统、数据库、客户端三方字符集不一致导致，需要统一字符

面试题038：企业生产的Mysql如何优化（请多角度描述）
    1.提升服务器硬件资源与网络带宽
    2.优化mysql服务配置文件
    3.开启慢查询日志然后分析问题所在
面试题039：Mysql高可用方案有哪些，各自特点，企业如何选择？
    1.主从架构
    2.Mysql+MMM
    3.Mysql+MHA
    4.mysql+haproxy+drbd
    5.mysql+proxy+amoeba
面试题040：如何批量修改更改数据表的引擎？
    通过mysqldump命令备份出一个sql文件，再使用sed命令进行替换

    或者执行下面的脚本进行修改

    

#!/bin/sh 
user=root 
passwd=123456 
cmd="mysql -u$user -p$passwd " 
dump="mysqldump -u$user -p$passwd" 
for database in `$cmd -e "show databases;"|sed '1,2d'|egrep -v "mysql|performance_schema"` 
do 
for tables in `dump -e "show tables from $databses;"|sed '1d'` 
do 
$cmd "alter table $database.$tables engine = MyISAm;" 
done 
done
面试题041：如何批量更改数据库字符集？
    通过mysqldump命令备份出一个sql文件，再使用sed命令替换sed -i  ‘s/GBK/UTF8/g’

 面试题042:网站打开慢请给出排查方法，如是数据库慢导致，请如何排查并解决，请分析并举例
    1.可以使用top free等命令等命令分析系统方面性能的问题

    2.如是数据库的原因造成的就需要查看慢查询日志去查找并分析问题所在。







（1）	MYSQL密码破解方法
在使用MYSQL数据库中，偶尔会出现密码忘记，或者被其他人员修改掉数据库权限的，如果需要紧急修改密码，如何破解MYSQL密码呢，首先停止MYSQL数据库服务，以跳过权限方式启动，命令如下：
/etc/init.d/mysqld  stop
/usr/bin/mysqld_safe  --user=mysql --skip-grant-tables &
MYSQL跳过权限方式启动后，在Shell终端执行mysql命令并按Enter键，进入mysql命令行，如图11-5所示：
 图11-5 跳过权限启动并登陆MYSQL

1.2 	MySQL集群实战
MYSQL主从复制集群在中小企业、大型企业中被广泛使用，MYSQL主从复制的目的是实现数据库冗余备份，将Master数据库数据定时同步至Slave库中，一旦Master数据库宕机，可以将WEB应用数据库配置快速切换至Slave数据库，确保WEB应用较高的可用率，如图11-12所示，为MYSQL主从复制结构图：
 
图11-12 MYSQL主从原理架构图
Mysql主从复制集群至少需要2台数据库服务器，其中一台为Master库，另外一台为Slave库，MYSQL主从数据同步是一个异步复制的过程，要实现复制首先需要在master上开启bin-log日志功能，bin-log日志用于记录在Master库中执行的增、删、修改、更新操作的sql语句，整个过程需要开启3个线程，分别是Master开启IO线程，Slave开启IO线程和SQL线程，具体主从同步原理详解如下：
	Slave上执行slave start，Slave IO线程会通过在Master创建的授权用户连接上至Master，并请求master从指定的文件和位置之后发送bin-log日志内容；
	Master接收到来自slave IO线程的请求后，master IO线程根据slave发送的指定bin-log日志position点之后的内容，然后返回给slave的IO线程。
	返回的信息中除了bin-log日志内容外，还有master最新的binlog文件名以及在binlog中的下一个指定更新position点；
	Slave IO线程接收到信息后，将接收到的日志内容依次添加到Slave端的relay-log文件的最末端，并将读取到的Master端的 bin-log的文件名和position点记录到master.info文件中，以便在下一次读取的时候能告知master从响应的bin-log文件名及最后一个position点开始发起请求；
	Slave Sql线程检测到relay-log中内容有更新，会立刻解析relay-log的内容成在Master真实执行时候的那些可执行的SQL语句，将解析的SQL语句并在Slave里执行，执行成功后，Master库与Slave库保持数据一致。

