1、	IT运维安全概念和应用场景
1）	学习Linux技术，从事Linux运维（自动化、云计算、虚拟化）岗位主要的工作职责：保障企业IT设备、门户网站、业务系统、应用软件&程序高效稳定的运行；
2）	运维人员掌握一些安全技能，能够让我们更好的维护其稳定性，保障其安全性，不被黑客给入侵或者误操作而造成严重的损失，安全技能尤为重要，不懂安全的运维工程师，不是一个真正运维工程师；
3）	对于IT运维领域来讲，运维安全主要体现在哪些层面呢？（运维人员注重防御，而不是攻击手段）
	硬件层面
IDC机房门禁、设备静电、灭火器、管理人员权限、摄像头监控、操作权限、供电系统、空调、大风扇、服务器硬件等；
	软件层面
应用程序可读、可写、执行、控制访问权限、软件自身BUG、软件代码、网站程序代码、软件数据涉密、软件备份；
	系统层面
系统稳定性、系统补丁、系统用户、用户密码登录、密码复杂度、目录文件授权管理、开放端口、系统启动进程等；
	网络层面
网络流量、网络的连通性、网线、广域网链路、网络设备高可用、互备机制等；
4）	作为Linux运维工程师，如何对网站或者业务系统实施安全加固呢？安全加固的手段有哪些？
	Linux服务器内核定期升级稳定版本，及时打补丁包（安装程序）；
	禁止不必要的Linux用户，关闭一些不常用的用户和组；
	设置Linux用户和密码复杂度，定期修改服务器的密码；
	禁止ROOT用户登录Linux系统，启用普通用户或者sudo用户；
	隐藏远程登录SSH 22端口，修改为6022或者60022等；
	定期升级SSH远程服务端版本，允许特定IP访问或者通过秘钥方式或者短信验证方式登录；
	关闭Linux系统不常用的软件服务，不必要的端口和进程等；
	隐藏常用软件程序的版本号：Nginx、Apache、Tomcat、MYSQL等；
	开启Linux系统级别防火墙规则：Iptables、Firewalld限制端口访问和网络流量等；
	设置应用程序、网站代码读写权限，尽量将权限控制到最小；
	记录每个运维人员、开发人员操作服务器的命令、对相关的人员做日志审计；（堡垒机、审计产品）
	开启Linux应用层级的安全措施：Selinux安全策略配置等；
	IDC机房入口设置硬件级别的防火墙，通过硬件防火墙对数据包进行过滤或者封禁等；
2、	Iptables软件概念&防火墙安全
1）	Iptables是Linux内核级别软件级防火墙，区别于硬件设备的防火墙，IPtables是开源的、免费的，硬件防火墙收费的，成本比较高；
2）	Netfilter/iptables看成是统一基于Linux级别防火墙，其实基于IP数据包做过滤的，有两个组成部分：Netfilter和IPtables，其中Netfilter主要是集成在Linux内核中模块，而iptables是用于管理Netfilter模块的；（类似IP_VS和ipvsadm关系）；
3）	Iptables防火墙由表和链构成的，其中表是存储在Linux内核中（Netfilter模块），链是存在表中的，链中由单个规则或者多个规则组成的，规则是什么呢？规则（约定）允许访问、不允许访问等；
4）	Netfilter主要是作用于内核空间，属于Linux内核中一个数据包过滤模块，而Iptables是用于管理Netfilter模块的（管理Netfilter中的表和链（规则）），通常称防火墙不是Netfilter/Iptables，而是直接称为Iptables（统称）；
5）	如图所示，表示IPtables防火墙关于用户数据包的请求和流向结构图：
 
6）	IPtables防火墙最重要概念：表链规则,IPtables用于操作规则，IPtables内核模块自带的，但是iptables管理工具部分系统默认没有安装，基于YUM安装iptables管理工具，命令如下：
yum install iptables iptables-devel iptables-utils iptables-services -y
 
7）	Iptables防火墙默认规则存储至/etc/sysconfig/iptables，代码如下：
# sample configuration for iptables service
# you can edit this manually or use system-config-firewall
# please do not ask us to add additional ports/services to this default configuration
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT


